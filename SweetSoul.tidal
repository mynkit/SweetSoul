setcps (86/60/4)

all $ (|* gain 2.5)

do
  resetCyclesTo (0-0.05)
  let
    bpm = 86
  d1
    $ (|* gain 0.7)
    $ when (elem' [55]) (
      sometimesBy 0.4 $ ((ply (choose [8,6,4])).(|* gain (choose [0.9,0.9,0.95])).(# cut 1)))
    $ when (elem' [56..57]) (
      sometimesBy 0.7 $ ((ply (choose [8,6,4])).(|* gain (choose [0.9,0.9,0.95])).(# cut 1)))
    $ seqP [
    (0, 32, (
      swingBy (1/24) 8
      $ when (==0) (while "t t t t" (stut' 2 (1/8) ((|* gain 0.9).(|> pan (0)))))
      $ when (==0) (while "f t t t" (stut' 8 (1/4) ((|* gain 0.8).(|> pan (1)))))
      $ when (==0) (while "t t t t" (stut' 2 (3/16) ((|* gain 0.7).(|> pan (0.2)))))
      $ when (==0) (while "f t t t" (stut' 8 (3/8) ((|* gain 0.6).(|> pan (0.8)))))
      $ when (>=1) (stut' 2 (1/8) ((|* gain 0.9).(|> pan (0))))
      $ when (>=1) (stut' 8 (1/4) ((|* gain 0.8).(|> pan (1))))
      $ when (>=1) (stut' 2 (3/16) ((|* gain 0.7).(|> pan (0.2))))
      $ when (>=1) (stut' 8 (3/8) ((|* gain 0.6).(|> pan (0.8))))
      $ when (>=1) (every' 2 1 (# up "-2"))
      $ when (>=1) (every' 4 2 (# up "0 0 0 -4"))
      $ when (==28) (const $ s "notes:2" # up "-5" # room 0.2 # shape 0 # gain 0.7)
      $ when (>=29) (const $ s "~")
      $ s "<notes:2 ~> ~ [~ <~ notes:2>] [~ <notes:2 ~>]"
      # pan 0.5
      # shape 0
      # room 0.2
      # gain 0.7
    )),
    (38, 39, (
      s "[~ waterdrop:0] ~ ~ ~"
      # pan 0.05 # gain 0.7
    )),
    (39, 40, (
      s "~ ~ [~ notes:2] ~"
      # pan 0.8 # room 0.7 # gain 0.7 # up "15"
    )),
    (41, 43, (
      (# cut 1)
      $ when (==1) (const $ s "coin:0" # gain 0.1)
      $ ply "1 1 1 16"
      $ s "~ coin:0 ~ coin:0"
      # pan "0.3 1" # gain "0.8 0.6"
    )),
    (42, 43, (
      s "~ ~ ~ bath:3" # gain 0.9 # pan 0.1 # speed 1
    )),
    (43, 44, (
      (# cut 1)
      $ when (==1) (const $ s "coin:0" # gain 0.1)
      $ ply "1 1 1 16"
      $ s "~ ~ ~ coin:0"
      # pan "0.3" # gain "0.6"
    )),
    (44, 45, (
      while "t f f f" ((# room 0.3).(# shape 0.01))
      $ s "notes:2 ~ ~ coin:0 ~ notes:2 ~ ~"
      # pan "0.9 0.3" # gain "0.7 0.8 0.8 0.8" # up "-4 -16"
    )),
    (45, 46, (
      (# cut 1)
      $ s "~ ~ notes:2 ~ coin:0 ~ ~ notes:2"
      # pan rand # gain "0.8" # up "-16"
    )),
    (46, 47, (
      (# cut 1)
      $ s "~ ~ ~ ~ notes:2 ~ coin:0"
      # pan rand # gain "0.8" # up "-16"
    )),
    (47, 48, (
      (# cut 1)
      $ s "rock:0 ~ ~ notes:2" # pan "1 0.3" # gain "0.9 0.65"
      # up "0 15" # shape 0.01 # room "0.1 0.7"
    )),
    (48, 50, (
      (# cut 1)
      $ ply "1 1 8 1"
      $ when (==1) (const $ s "bath:1" # gain 0.1)
      $ s "~ bath bath ~ bath bath" # n 3 # gain 0.75 # pan (fast 3 $ rand) # speed (range 0.8 1.2 rand)
    )),
    (50, 51, (
      ply "8 4 2 1"
      $ s "rock:0 ~ ~ ~" # gain "0.5" # pan "0"
    )),
    (52, 59, (
      s "~ ~ ~ notes:2" # pan (fast 3 $ rand) # gain "0.7" # up "-12"
    )),
    (55, 59, (
      fast 1.5 $ degradeBy 0.4
      $ s "~ notes:2" # pan 0 # gain "0.7" # up "-17"
    )),
    (53, 55, (
      "[~ notes:2] [~] [~] [~ notes:2] [~] [~ notes:2] [~]" # pan rand # gain "0.7"
      # up (wchoose [(-16, 0.8), (-11, 0.2)])
    )),
    (55, 57, (
      "[~] [~ notes:2] [~] [~] [~ notes:2] [~] [~] [~ notes:2]" # pan rand # gain "0.7"
      # up (wchoose [(-16, 0.8), (-12, 0.1), (3, 0.1)])
    )),
    (57, 59, (
      "[~] [~] [~ notes:2] [~] [~] [~ notes:2] [~] [~]" # pan rand # gain "0.7"
      # up (wchoose [(-16, 0.8), (-12, 0.2)])
    )),
    (51, 58, (
      every' 2 0 (|* gain 0)
      $ s "~ [~ notes:2] ~ ~"
      # pan 0.9 # room 0.7 # gain 0.7 # up "15"
    ))
    ]
  d2
    $ (|* gain 0.38)
    $ (jux ((# hpf 80).(# lpf 5000).(|* gain 1.05)))
    $ seqP [
    (2, 15, (
      when (==11) (# sustain ((*(100/bpm)) <$> "5.45"))
      $ slow 2
      $ s "~ ~ ~ [~ superhammondBend]"
      # n "<a4,e4,cs5>"
      # voice 2
      # lpf 1000
      # slide "0 0 0 <0.5 -0.5>"
      # sustain ((*(100/bpm)) <$> "4.9")
      # sustainpedal "1.9"
      # gain 0.5
      # room 0.25
    )),
    (16, 20, (
      slow 2
      $ s "superhammondBend*2"
      # n "<<d4,fs4,cs5> <b4,d5,a4>> <<cs4,e4,b4> <e4,a4,d5>>"
      # voice 2
      # lpf 1000
      # slide "<0.5 -0.5>"
      # sustain ((*(100/bpm)) <$> "2.45")
      # sustainpedal "0.25"
      # gain 0.6
      # room 0.25
    )),
    (18, 21, (
      slow 2
      $ s "~ ~ ~ [~ superhammondBend]"
      # n "<a4,e4,cs5>"
      # voice 2
      # lpf 1000
      # slide "0 0 0 <0.5 0.1>"
      # sustain ((*(100/bpm)) <$> "5.45")
      # sustainpedal "1.9"
      # gain 0.5
      # room 0.25
    )),
    (22, 23, (
      slow 2
      $ s "superhammondBend"
      # n "<a4,e4,cs5>"
      # voice 2
      # lpf 1000
      # slide "0 0 0 0.5"
      # sustain ((*(100/bpm)) <$> "4.9")
      # sustainpedal "0.5"
      # gain 0.5
      # room 0.25
    )),
    (24, 28, (
      slow 2
      $ s "superhammondBend*2"
      # n "<<d4,fs4,cs5> <b4,d5,a4>> <<cs4,e4,b4> <e4,a4,d5>>"
      # voice 2
      # lpf 1000
      # slide "<0.5 -0.5>"
      # sustain ((*(100/bpm)) <$> "2.45")
      # sustainpedal "0.25"
      # gain 0.6
      # room 0.25
    )),
    (32, 36, (
      slow 2
      $ s "superhammondBend*2"
      # n "<<a4,d4,b4> <fs4,d4,b4>> <<b4,e4,cs4> <e4,a4,d5>>"
      # voice 2
      # lpf 1000
      # slide "<0.5 -0.5>"
      # sustain ((*(100/bpm)) <$> "2.45")
      # sustainpedal "0.25"
      # gain 0.47
      # room 0.25
    )),
    (36, 40, (
      slow 2
      $ s "superhammondBend*2"
      # n "<<a4,e4,b4> <d4,cs5,fs4>> <<a4,e4,b4,g4> <d4,c5,f4>>"
      # voice 2
      # lpf 1000
      # slide "<0.5 -0.5>"
      # sustain ((*(100/bpm)) <$> "2.45")
      # sustainpedal "0.25"
      # gain 0.55
      # room 0.25
    )),
    (40, 43, (
      slow 2
      $ s "superhammondBend*2"
      # n "<<cs4,e4,b4> <b3,a4,d5>> <<fs3,e4,b4> <e4,a4,d5>>"
      # voice 2
      # lpf 1000
      # slide "<0.5 -0.5>"
      # sustain ((*(100/bpm)) <$> "2.45")
      # sustainpedal "0.25"
      # gain 0.55
      # room 0.25
    )),
    (43, 47, (
      slow 2
      $ s "superhammondBend*2"
      # n "<<a4,e4,b4> <d4,cs5,fs4>> <<a4,e4,b4,g4> <d4,c5,f4>>"
      # voice 2
      # lpf 1000
      # slide "<0.5 -0.5>"
      # sustain ((*(100/bpm)) <$> "2.45")
      # sustainpedal "0.25"
      # gain 0.55
      # room 0.25
    )),
    (47, 51, (
      slow 2
      $ s "superhammondBend*2"
      # n "<<cs4,e4,b4> <b3,a4,d5>> <<fs3,e4,b4> <e4,a4,d5>>"
      # voice 2
      # lpf 1000
      # slide "<0.5 -0.5>"
      # sustain ((*(100/bpm)) <$> "2.45")
      # sustainpedal "0.25"
      # gain 0.55
      # room 0.25
    )),
    (51, 59, (
      slow 2
      $ s "superhammondBend"
      # n "<a4,e4,cs5>"
      # voice 2
      # lpf 1000
      # slide "0"
      # sustain ((*(100/bpm)) <$> "4.9")
      # sustainpedal "0.5"
      # gain 0.5
      # room 0.25
    ))
    ]
  d3 -- click
    $ (|* gain 0.65)
    $ when (==9) (while "f t t t t t t f" (# gain 0))
    $ seqP [
    (0, 28, (
      when (<=6) (# gain 0)
      $ (|* gain 0.9)
      $ fast 8
      $ (|- n 7)
      $ every' 3 0 (const (
        s "SinOscSynthBend ~" # n "<af4,af5,af6>"
        # hpf 900 # lpf 1000 # sustain 0.05 # pan (range 0.7 0.9 rand)))
      $ every' 3 1 (const (
        s "~ SinOscSynthBend" # n "<af4,af5,af6>"
        # hpf 900 # lpf 1000 # sustain 0.05 # pan (range 0.7 0.9 rand)))
      $ s "~"
    )),
    (35, 36, (
      fast 8
      $ (|* gain 0.9)
      $ (|- n 7)
      $ every' 3 0 (const (
        s "SinOscSynthBend ~" # n "<af4,af5,af6>"
        # hpf 900 # lpf 1000 # sustain 0.05 # pan (range 0.7 0.9 rand)))
      $ every' 3 1 (const (
        s "~ SinOscSynthBend" # n "<af4,af5,af6>"
        # hpf 900 # lpf 1000 # sustain 0.05 # pan (range 0.7 0.9 rand)))
      $ s "~"
    )),
    (51, 59, (
      (|- n 7)
      $ s "~ [~ SinOscSynthBend] ~ ~ ~ SinOscSynthBend ~ ~" # n "<af4,af5,af6>"
      # hpf 900 # lpf 1000 # sustain 0.05 # pan (range 0.7 0.9 rand)
      # gain 0.9
    ))
    ]
  d4 -- BassDrum-like sound
    $ (|* gain 1.0)
    $ when (==6) (while "f f t t" (# gain 0))
    $ when (==7) (while "t f f f" (# gain 0))
    $ (# lpf 250)
    $ seqP [
    (2, 28, (
      fast 4
      $ when (>=4) (every' 6 0 (const (
        s "~ [click click]" # n 2
        # gain "1 [1 0.8]" # speed "1 [1 0.4]"
        # lpf 250 # pan 0.5)))
      $ every' 3 0 (const (
        s "~ click" # n 2
        # lpf 250 # pan 0.5))
      $ every' 3 2 (const (
        s "click ~" # n 2
        # lpf 250 # pan 0.5))
      $ s "~"
    )),
    (28, 30, (
      s "~ click [~ click] ~"
      # n 2 # lpf 250
    )),
    (30, 31, (
      s "~ ~ click ~"
      # n 2 # lpf 270
    )),
    (31, 32, (
      s "~ click ~ [~ click]"
      # n 2 # lpf 290
    )),
    (32, 33, (
      s "click ~ ~ ~ click ~ ~ click"
      # n 2 # lpf 300
    )),
    (33, 34, (
      s "~ ~ click ~ click ~ ~ click"
      # n 2 # lpf 300
    )),
    (34, 50, (
      every' 3 2 (while "f t" ((ply (choose [8,4,6])).(# pan (rand*(1-rand))).(|* gain 0.8)))
      $ sometimesBy 0.6 ((1/8) <~)
      $ sometimesBy 0.3 ((1/16) <~)
      $ s "~ click ~ click"
      # n 2 # lpf 300 # pan rand
    )),
    (50, 51, (
      s "click"
      # n 2 # lpf 300
    )),
    (51, 59, (
      ((# n 2).(# lpf 300))
      $ every' 4 0 (const $ s "click ~ ~ ~ click ~ ~ click")
      $ every' 4 1 (const $ s "~ ~ ~ ~ click ~ ~ ~")
      $ every' 4 2 (const $ s "click ~ ~ click ~ ~ ~ click")
      $ every' 4 3 (const $ s "click ~ ~ ~ ~ click ~ ~")
      $ s "~"
    ))
    ]
  d9 -- noise
    $ (|* gain 1.1)
    $ (# lpf 4000)
    $ seqP [
    (32, 34, (
      fast 8
      $ (# cut 1)
      $ every' 3 1 (const (
        s "~ [tableware tableware?]" # n (irand 15) # gain 0.6 # pan rand # room 0.3
      ))
      $ s "~"
    )),
    (34, 50, (
      someCyclesBy 0.1 (# gain 0)
      $ fast 3
      $ sometimesBy 0.2 (ply 4)
      $ (# cut 1)
      $ s "~ [tableware tableware/2?]"
      # n (irand 15) # gain 0.6 # pan rand
    ))
    ]
  d5 -- brushing
    $ (|* gain 0.55)
    $ when (==9) (while "f t" ((ply "1 2 2 4").(|* gain 0.75)))
    $ when (==10) (while "t f" ((ply "8").(|* gain 0.75)))
    $ seqP[
    (0, 36, (
      every' 8 7 (const $
        while "t f" (# gain 0)
        $ when (>=28) ((ply "1 2 2 3").(|* gain 0.7))
        $ when (<28) (fast 2)
        $ s "brushing*16"
        # gain "[0 0 0 0.5] [0.5 0.6 [0.7 0.8 0.9 1.0]]"
        # speed "1"
        # pan "1 0.9 0.8 0.5 0.3 0.1 0"
      )
      $ s "~"
    ))
    ,
    (8, 28, (
      every' 4 2 (const $
        stack [
          s "~ [~!3 brushing] ~ [~!3 brushing]" # speed "1" # pan 0.2 # gain 0.75,
          s "brushing" # speed 2 # pan 0.8 # gain 0.75
        ]
      )
      $ s "~ [~!3 brushing] ~ [~!3 brushing]" # speed "1" # pan 0.2 # gain 0.75
    )),
    (8, 28, (
      stut' 2 (3/16) ((|* gain 0.8).(|* speed 0.9).(|> pan (0))) $
      stut' 8 (3/8) ((|* gain 0.8).(|* speed 0.8).(|> pan (1))) $
      every' 4 0 (const $
        s "brushing" # speed 2 # pan 0.8 # gain 0.75
      )
      $ s "~"
    )),
    (28, 30, (
      stut' 2 (3/16) ((|* gain 0.8).(|* speed 0.9).(|> pan (0))) $
      stut' 6 (3/8) ((|* gain 0.8).(|* speed 0.8).(|> pan (1))) $
      when (==0) (const $ s "brushing" # speed 2 # pan 0.8 # gain 0.75)
      $ s "~"
    )),
    (32, 40, (
      when (==0) (# room "0.1 0.2")
      $ when (==1) (# room "0.3 0.4")
      $ when (==2) (# room "0.5 0.6")
      $ when (==3) (# room "0.7 0.8")
      $ when (>3) (# room "1")
      $ when (==3) (while "f t t" (stut' 2 (1/8) ((|* gain 0.9).(|> pan (0)))))
      $ when (==3) (while "f t t" (stut' 9 (1/4) ((|* gain 0.85).(|> pan (1)))))
      $ when (>3) (stut' 2 (1/8) ((|* gain 0.9).(|* lpf 0.8).(|> pan (0))))
      $ when (>3) (stut' 8 (1/4) ((|* gain 0.85).(|* lpf 0.64).(|> pan (1))))
      $ when (<2) (const $
        s "[~ brushing]*6" # speed 2 # gain 0.5
        # pan (wchoose [(0.9, 0.5), (0.1, 0.5)]))
      $ when (==2) (const $
        s "[brushing]*4" # speed 2 # gain 0.5
        # pan (wchoose [(0.9, 0.5), (0.1, 0.5)]))
      $ when (==3) (const $
        s "[brushing]*4" # speed 2 # gain "0.5 0.55 0.6 0.65"
        # pan (wchoose [(0.9, 0.5), (0.1, 0.5)]) # lpf 4000)
      $ s "~"
    ))
    ]
  d6 -- bass
    $ (|* gain 0.35)
    $ when (==4) (# gain 0)
    $ when (==5) (while "t f" (# gain 0))
    $ when (==10) (while "f t t f" (# gain 0))
    $ when (==11) (while "f f f t" (# gain 0))
    $ seqP [
    (4, 24, (
      (|+ n 12)
      $ every' 4 0 (const $
        s (fit 0 ["SinOscSynthBend"] "0 ~ [~ 0] [[~ 0] ~]")
        # sustain "1.2 1.2 0.7 0.7"
        # n "<a1> <a2,a1> <e2,e1> <b1,b1>"
      )
      $ every' 4 1 (const $
        s (fit 0 ["SinOscSynthBend"] "0 ~ [~ 0*2] ~")
        # sustain "1.2 0.7 0.7 1"
        # n "<e1,e1> ~ <a1,a1> ~"
      )
      $ every' 4 2 (const $
        s (fit 0 ["SinOscSynthBend"] "~ [~ 0] ~ 0")
        # sustain "0.7 0.7 0.7 0.7"
        # n "<a2,a1> <a2,a1> <e2,e1> <b1,b1>"
      )
      $ every' 4 3 (const $
        s (fit 0 ["SinOscSynthBend"] "~ [~ 0*2] ~ [~ 0*2]")
        # sustain "1 0.7 1 0.6"
        # n "<a2,a1> [~ [<e1,e1> <a1,a1>]] <a2,a1> [~ [<b1,b1> <cs2,cs2>]]"
      )
      $ s "~"
    )),
    (16, 28, (
      when (elem' [20..23]) (# gain 0)
      $ every' 4 0 (const $
        s (fit 0 ["SinOscSynthBend"] "0 ~ [~ 0] [[~ 0] ~]")
        # sustain "1.2 1.2 0.7 0.7"
        # n "<d3,d2>"
      )
      $ every' 4 1 (const $
        s (fit 0 ["SinOscSynthBend"] "0 ~ [~ 0*2] ~")
        # sustain "1.2 0.7 0.7 1"
        # n "<cs3,cs2> ~ [~ [<cs3,cs2> <e2,e3>]] ~"
      )
      $ every' 4 2 (const $
        s (fit 0 ["SinOscSynthBend"] "~ [~ 0] ~ 0")
        # sustain "0.7 0.7 0.7 0.7"
        # n "~ <b2,b1> ~ <b2,b1>"
      )
      $ every' 4 3 (const $
        s (fit 0 ["SinOscSynthBend"] "~ [~ 0*2] ~ [~ 0*2]")
        # sustain "1 0.7 1 0.6"
        # n "~ [~ [<e3,e2> <d3,d2>]] ~ [~ [<b1,b1> <cs2,cs2>]]"
      )
      $ s "~"
    )),
    (28, 29, (
      s "superhammondBend" # n "a1" # gain 0.36 # sustain 11 # lpf 50
    )),
    (27, 28, (
      s "SinOscSynthBend"
      # n "<gs2,gs3>"
      # sustain "1"
    )),
    (28, 29, (
      s "~ ~ ~ SinOscSynthBend"
      # n "~ ~ ~ <a2,a3>"
      # sustain "1"
    )),
    (29, 30, (
      s "~ [~ SinOscSynthBend] ~ SinOscSynthBend"
      # n "<a2,a3> <f2,f3> ~ <fs2,fs3>"
      # sustain "1"
    )),
    (30, 31, (
      s "~ ~ [~ SinOscSynthBend] ~"
      # n "<e2,e3> <e2,e3> <e2,e3> <ds2,ds3>"
      # sustain "1"
    )),
    (31, 32, (
      s "SinOscSynthBend ~ SinOscSynthBend ~"
      # n "<ds2,ds3>"
      # sustain "1"
    )),
    (32, 33, (
      s "SinOscSynthBend ~!2 SinOscSynthBend*2 ~!2 ~ SinOscSynthBend"
      # n "<b1,b2>"
      # sustain "1 [1 [0.5 1]] 1 1"
    )),
    (33, 34, (
      s "~!3 SinOscSynthBend*2  ~ ~ ~ [~ SinOscSynthBend]"
      # n "<cs2,cs3>"
      # sustain "1 [0.5 1] 1 0.7"
    )),
    (34, 35, (
      s "SinOscSynthBend ~ [~ SinOscSynthBend*2] [~ SinOscSynthBend]"
      # n "<g2,g3> <g2,g3> <g2,g3> [<fs2,fs3> <e2,e3>]"
      # sustain "1 1 0.5 [0.7 2]"
      # gain  "1 1 [~ [1 0.7]] 1"
    ))
    ,
    (51, 59, (
      (|+ n 12)
      $ when (==0) (while "t f f f" (# gain 0))
      $ every' 4 0 (const $
        s (fit 0 ["SinOscSynthBend"] "0 ~ [~ 0] [~ 0]")
        # sustain "1.2 1.2 0.7 0.7"
        # n "<a1> <e2,e1> <e2,e1> <b1,b1>"
      )
      $ every' 4 1 (const $
        s (fit 0 ["SinOscSynthBend"] "~ ~ [~ 0] ~")
        # sustain "1.2 0.7 0.7 1"
        # n "<e1,e1> <a1,a1>"
      )
      $ every' 4 2 (const $
        s (fit 0 ["SinOscSynthBend"] "~ [~ 0] ~ 0")
        # sustain "0.7 0.7 0.7 0.7"
        # n "<a2,a1> <a2,a1> <e2,e1> <b1,b1>"
      )
      $ every' 4 3 (const $
        s (fit 0 ["SinOscSynthBend"] "[~ 0*2] ~ [~ 0] ~")
        # sustain "1 0.7 1 0.6"
        # n "[~ [<e1,e1> <a1,a1>]] ~ <a2,a1> [~ [<b1,b1> <cs2,cs2>]]"
      )
      $ s "~"
    ))
    ]
  d7 -- sine synth chord
    $ (|* gain 0.6)
    $ when (<36) ((# sustain 2).(# room 0.1).(|* gain 0.8))
    $ when (elem' [36..50]) ((# room 0.1).(# sustain 1.5))
    $ when (>=51) ((# room 0.1).(# sustain 1).(|* gain 1.15))
    $ when (>=51) (stut' 2 (1/8) ((|* gain 0.9).(|* hpf 1.2).(# lpf 1000).(|> pan 0).(|> slide 0)))
    $ when (>=51) (stut' 10 (1/4) ((|* gain 0.81).(|* hpf 1.2).(# lpf 1000).(|> pan 1).(|> slide 0)))
    $ seqP [
    (27, 28, (
      stack [
        (|* gain "1.0") $
        s "~!5 SinOscSynthBend ~!2"
        # n "<e2,e3,a4,d5,fs5>"
        # slide "0.3"
        # pan 0.9 # hpf 700
      ]
    )),
    (28, 29, (
      stack [
        (|* gain "1 0.8 0.64 0.6") $
        s "SinOscSynthBend ~!2 SinOscSynthBend ~!2 SinOscSynthBend ~"
        # n "<gs3,gs4,b4,e5>"
        # slide "0.3 0 0 0"
        # pan "0.5!3 0!3 1!2" # hpf 700 # lpf "4000 1000 1000 1000"
      ]
    )),
    (29, 30, (
      stack [
        (|* gain "0.95 1 1 1") $
        s "~ SinOscSynthBend ~!2 SinOscSynthBend ~!2 SinOscSynthBend"
        # n "<a3,a4,b4,e5> <f3,b4,d5,gs5>"
        # slide "0.3 0 0 0.3"
        # pan "0.5!3 0.1!3 0.7!2" # hpf 700 # lpf "4000 1000 1000 1000"
      ]
    )),
    (30, 31, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        s "SinOscSynthBend"
        # n "<fs3,cs5,e5,a5> e3"
        # slide "0.3 0 0 0.3"
        # pan "0.5!3 0!3 1!2" # hpf 700
      ]
    )),
    (31, 32, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        s "~!3 SinOscSynthBend ~!4"
        # n "<ds3,ds4,a4,cs5,fs5>"
        # slide "0.3"
        # pan 0.4 # hpf 700
      ]
    )),
    (32, 33, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        s "SinOscSynthBend"
        # n "<b3,d3,a4,d5,e5>"
        # slide 0.3
        # hpf 700
      ]
    )),
    (33, 34, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        s "SinOscSynthBend"
        # n "<cs3,e3,b4,e5,fs5>"
        # slide 0.3
        # hpf 700
      ]
    )),
    (34, 35, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        s "SinOscSynthBend"
        # n "<g2,g3,fs3,a4,d5>"
        # slide 0.3
        # hpf 700
      ]
    )),
    (35, 36, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        s "SinOscSynthBend"
        # n "<e2,e3,a4,d5,fs5>"
        # slide 0.3
        # hpf 700
      ]
    )),
    (36, 37, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        s "SinOscSynthBend"
        # n "<a4,b4,e5>"
        # slide 0.3 # pan 0.1
        # hpf 900
      ]
    )),
    (37, 38, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain 1.2) $
        s "~ SinOscSynthBend ~ ~"
        # n "<g4,a4,cs5>"
        # slide 0.3
        # pan 0.3 # hpf 900
      ]
    )),
    (38, 39, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain 1.2) $
        s "SinOscSynthBend"
        # n "<fs4,a4,d5>"
        # slide 0.3
        # pan 0.9 # hpf 900
      ]
    )),
    (39, 40, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain "[0 1.2] 1.2 1.2 1.2") $
        s "[~ SinOscSynthBend] [~ SinOscSynthBend] ~ ~"
        # n "<f4,a4,e5> d5 ~ ~"
        # slide 0.3
        # pan 0.8 # hpf 900
      ]
    )),
    (40, 41, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain "1.1") $
        s "SinOscSynthBend"
        # n "<af4,a4,b4>"
        # slide 0.3
        # pan 0.1 # hpf 900
      ]
    )),
    (41, 42, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain "0.9") $
        s "~ SinOscSynthBend ~ ~"
        # n "<af4,e5,af5>"
        # slide 0.3
        # pan 0.4 # hpf 900
      ]
    )),
    (42, 43, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain "1.1") $
        s "[~ SinOscSynthBend] ~ ~ ~"
        # n "<b3,a4,d5,e5>"
        # slide 0.3
        # pan 0.1 # hpf 900
      ]
    )),
    (43, 44, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        s "[~ SinOscSynthBend] ~ ~ ~"
        # n "<a4,b4,e5>"
        # slide 0.3
        # pan 0.9 # hpf 900
      ]
    )),
    (44, 45, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain 1.2) $
        s "~ SinOscSynthBend ~ ~"
        # n "<g4,a4,cs5>"
        # slide 0.3
        # pan 0.2 # hpf 900
      ]
    )),
    (45, 46, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain 1.2) $
        s "SinOscSynthBend"
        # n "<fs4,a4,d5>"
        # slide 0.3
        # pan 0.7 # hpf 900
      ]
    )),
    (46, 47, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain "[0 1.2] 1.2 1.2 1.2") $
        s "SinOscSynthBend [~ SinOscSynthBend] ~ ~"
        # n "<f4,a4,e5> <f4,d5> ~ ~"
        # slide 0.3
        # pan 0.2 # hpf 900
      ]
    )),
    (47, 48, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain "1.0") $
        s "~ [~ SinOscSynthBend] ~ ~"
        # n "<af4,a4,e5>"
        # slide 0.3
        # pan 0.1 # hpf 900
      ]
    )),
    (48, 49, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain "0.9") $
        s "~ SinOscSynthBend ~ ~"
        # n "<af4,e5,af5>"
        # slide 0.3
        # pan 0.5 # hpf 900
      ]
    )),
    (49, 50, (
      stack [
        stut' 3 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain "1.1") $
        s "[~ SinOscSynthBend] ~ ~ ~"
        # n "<b3,a4,d5,e5>"
        # slide 0.3
        # pan 0.4 # hpf 900
      ]
    )),
    (50, 52, (
      stack [
        stut' 6 (3/8) ((|* gain 0.8).(|* hpf 1.1).(# lpf 1000).(|> pan rand).(|> slide 0)) $
        (|* gain "1.1") $
        when (==0) (const $
          s "~ SinOscSynthBend ~ ~"
          # n "<e3,d5,a4>"
          # slide 0.3
          # pan 0.8 # hpf 900
        )
        $ s "~"
      ]
    )),
    (51, 53, (
      slow 2
      $ s "[SinOscSynthBend ~!2 SinOscSynthBend] [~!2 SinOscSynthBend ~] [SinOscSynthBend ~!2 SinOscSynthBend] [~!2 SinOscSynthBend ~]"
      # n "[<e4,a4,cs5> <fs4,a4,d5>] [<e4,fs4,b4>] [<d4,e4,a4> <e4,a4,d5>] [<e4,a4,cs5>]"
      # slide "0.3 0.3 0.3 [0.3 -0.05]"
      # pan rand # hpf 900
    )),
    (53, 55, (
      slow 2
      $ s "[SinOscSynthBend ~ SinOscSynthBend ~] [~ SinOscSynthBend ~ SinOscSynthBend] [~!2 SinOscSynthBend ~] [~ SinOscSynthBend ~!2]"
      # n "[a4 <e4,a4,cs5>] [<cs4,e4,a4> <a3,b4,e4>] [<gs3,e4,a4>] [<fs3,e4,af4>]"
      # slide 0.3
      # pan rand # hpf 900
    )),
    (55, 57, (
      slow 2
      $ s "[SinOscSynthBend ~!2 SinOscSynthBend] [~!2 SinOscSynthBend ~] [SinOscSynthBend ~!2 SinOscSynthBend] [~!2 SinOscSynthBend!2]"
      # n "[<e4,a4,cs5> <fs4,a4,d5>] [<e4,fs4,b4>] [<d4,e4,a4> <e4,a4,d5>] [~ ~ <e4,a4,cs5> d5]"
      # slide "0.3 0.3 0.3 [0.3 -0.05]"
      # pan rand # hpf 900
    )),
    (57, 61, (
      when (>=2) (const $ s "~")
      $ slow 2
      $ s "[SinOscSynthBend ~ SinOscSynthBend!2] [~ SinOscSynthBend ~ SinOscSynthBend] [SinOscSynthBend ~ SinOscSynthBend!2] [~ SinOscSynthBend ~!2]"
      # n "[a4 a4 <e4,a4,cs5> e5] [<cs4,e4,a4> <a3,b4,e4>] [d5 ~ <gs3,e4,a4> cs5] [<fs3,e4,af4>]"
      # slide 0.3
      # pan rand # hpf 900
    ))
    ]
    # sustainpedal 0.4
  d8 -- guitar chord
    $ (|* gain 0.72)
    $ seqP [
    (34, 35, (
      stack [
        s "G69" # pan 0.1 # gain 0.75 # lpf 2000,
        s "DonE" # speed "-1" # gain 0.95
      ]
    ))
    ]
  d15
    $ seqP [
    (-4, -3, (
      s "station:0" # gain 0.8 # speed "1"
    )),
    (30, 31, (
      s "~ waterdrop:0 ~ ~" # gain 0.5 # pan 0.1 # room 0.3 # shape 0.3 # speed "1.75"
    )),
    (31, 32, (
      s "~ ~ ~ [~ station:1]" # gain 0.35 # speed "-1" # lpf 500
    )),
    (32, 33, (
      s "[~ station:2] ~ ~ ~" # gain 0.35 # speed "-0.5" # lpf 1500
    )),
    (33, 34, (
      stack [
       s "station:1" # gain 0.3 # pan 0 # speed "1",
       s "~ station:2" # gain 0.3 # pan 0.7 # speed "-1",
       s "~ ~ ~ station:2" # gain 0.3 # pan 0.9 # speed "1.5"
      ]
    )),
    (34, 35, (
      stack [
       s "station:1" # gain 0.35 # pan 0 # speed "0.5",
       s "~ station:2" # gain 0.35 # pan 0.7 # speed "-1",
       s "~ ~ [~ station:1] ~" # gain 0.35 # pan 0.2 # speed "-2"
      ]
    )),
    (35, 36, (
      stack [
       s "station:1" # gain 0.4 # pan 0 # speed "2",
       s "~ station:2" # gain 0.4 # pan 0.1 # speed "-2.5",
       s "~ ~ [~ station:1] ~" # gain 0.4 # pan 1 # speed "-1.5",
       s "~ ~ ~ station:2" # gain 0.3 # pan 0.9 # speed "-1",
       s "~ ~ bath:5 ~" # gain 0.5 # pan 0.5 # speed "0.4" # shape 0.2 # room 0.3
      ]
    )),
    (4, 28, (
      sometimesBy 0.2 (# gain 0)
      $ fast (range 0.25 20 rand)
      $ sometimesBy 0.4 (0.25 ~>)
      $ s "SinOscSynthBend"
      # n (choose [2,3,4,5])
      # sustain (range 0.0003 0.0005 rand)
      # pan (slow 5 rand)
      # gain (range 0.3 0.5 rand)
    )),
    (28, 32, (
      sometimesBy 0.3 (jux(rev))
      $ sometimesBy 0.5 (0.125 ~>)
      $ sometimesBy 0.2 (# room 0.5)
      $ s "SinOscSynthBend*32"
      # n (choose [2,3,4,5])
      # sustain (range 0.0004 0.0008 (fast 3 $ rand))
      # pan (fast 4 rand)
      # gain (range 0.3 0.5 (fast 5 $ rand))
    )),
    (32, 51, (
      sometimesBy 0.2 (# gain 0)
      $ fast (range 0.25 20 rand)
      $ sometimesBy 0.4 (0.25 ~>)
      $ s "SinOscSynthBend"
      # n (choose [2,3,4,5])
      # sustain (range 0.0003 0.0005 rand)
      # pan (slow 5 rand)
      # gain (range 0.3 0.5 rand)
    )),
    (51, 59, (
      sometimesBy 0.3 (jux(rev))
      $ sometimesBy 0.5 (0.125 ~>)
      $ sometimesBy 0.2 (# room 0.5)
      $ s "SinOscSynthBend*32"
      # n (choose [2,3,4,5])
      # sustain (range 0.0004 0.001 (fast 3 $ rand))
      # pan (fast 4 rand)
      # gain (range 0.3 0.5 (fast 5 $ rand))
    ))
    ]
