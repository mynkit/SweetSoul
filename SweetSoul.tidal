setcps (86/60/4)

all $ (|* gain 1.2)

do
  resetCyclesTo (0-0.05)
  let
    bpm = 86
  d1
    $ (|* gain 0.76)
    $ swingBy (1/36) 8
    $ when (==0) (while "t t t t" (stut' 2 (1/8) ((|* gain 0.9).(|> pan (0)))))
    $ when (==0) (while "f t t t" (stut' 8 (1/4) ((|* gain 0.8).(|> pan (1)))))
    $ when (==0) (while "t t t t" (stut' 2 (3/16) ((|* gain 0.7).(|> pan (0.2)))))
    $ when (==0) (while "f t t t" (stut' 8 (3/8) ((|* gain 0.6).(|> pan (0.8)))))
    $ when (>=1) (stut' 2 (1/8) ((|* gain 0.9).(|> pan (0))))
    $ when (>=1) (stut' 8 (1/4) ((|* gain 0.8).(|> pan (1))))
    $ when (>=1) (stut' 2 (3/16) ((|* gain 0.7).(|> pan (0.2))))
    $ when (>=1) (stut' 8 (3/8) ((|* gain 0.6).(|> pan (0.8))))
    $ when (>=1) (every' 2 1 (# up "-2"))
    $ when (>=1) (every' 4 2 (# up "0 0 0 -4"))
    $ s "<notes:2 ~> ~ [~ <~ notes:2>] [~ <notes:2 ~>]"
    # pan 0.5
    # shape 0.01
    # room 0.2
    # gain 1.0
  d2
    $ (|* gain 0.4)
    $ seqP [
    (2, 15, (
      when (==11) (# sustain ((*(100/bpm)) <$> "5.45"))
      $ slow 2
      $ jux ((0.01 ~>).(# hpf 80).(# lpf 5000).(|* gain 1.05))
      $ s "~ ~ ~ [~ superhammondBend]"
      # n "<a4,e4,cs5>"
      # voice 2
      # lpf 1000
      # slide "0 0 0 <0.5 -0.5>"
      # sustain ((*(100/bpm)) <$> "4.9")
      # sustainpedal "1.9"
      # gain 0.8
      # room 0.25
    )),
    (16, 20, (
      slow 2
      $ jux ((0.01 ~>).(# hpf 80).(# lpf 5000).(|* gain 1.05))
      $ s "superhammondBend*2"
      # n "<<d4,fs4,cs5> <b4,d5,a4>> <<cs4,e4,b4> <e4,a4,d5>>"
      # voice 2
      # lpf 1000
      # slide "<0.5 -0.5>"
      # sustain ((*(100/bpm)) <$> "2.45")
      # sustainpedal "0.25"
      # gain 1.0
      # room 0.25
    )),
    (18, 21, (
      slow 2
      $ jux ((0.01 ~>).(# hpf 80).(# lpf 5000).(|* gain 1.05))
      $ s "~ ~ ~ [~ superhammondBend]"
      # n "<a4,e4,cs5>"
      # voice 2
      # lpf 1000
      # slide "0 0 0 <0.5 0.1>"
      # sustain ((*(100/bpm)) <$> "5.45")
      # sustainpedal "1.9"
      # gain 0.8
      # room 0.25
    )),
    (22, 23, (
      slow 2
      $ jux ((0.01 ~>).(# hpf 80).(# lpf 5000).(|* gain 1.05))
      $ s "superhammondBend"
      # n "<a4,e4,cs5>"
      # voice 2
      # lpf 1000
      # slide "0 0 0 0.5"
      # sustain ((*(100/bpm)) <$> "4.9")
      # sustainpedal "0.5"
      # gain 0.8
      # room 0.25
    )),
    (24, 28, (
      slow 2
      $ jux ((0.01 ~>).(# hpf 80).(# lpf 5000).(|* gain 1.05))
      $ s "superhammondBend*2"
      # n "<<d4,fs4,cs5> <b4,d5,a4>> <<cs4,e4,b4> <e4,a4,d5>>"
      # voice 2
      # lpf 1000
      # slide "<0.5 -0.5>"
      # sustain ((*(100/bpm)) <$> "2.45")
      # sustainpedal "0.25"
      # gain 1.0
      # room 0.25
    ))
    ]
  d3
    $ (|* gain 1.0)
    $ when (<=6) (# gain 0)
    $ fast 8
    $ (|- n 7)
    $ every' 3 0 (const (
      s "SinOscSynthBend ~" # n "<af4,af5,af6>"
      # hpf 900 # lpf 1000 # sustain 0.05 # pan (range 0.7 0.9 rand)))
    $ every' 3 1 (const (
      s "~ SinOscSynthBend" # n "<af4,af5,af6>"
      # hpf 900 # lpf 1000 # sustain 0.05 # pan (range 0.7 0.9 rand)))
    $ s "~"
    # gain (range 0.8 0.9 rand)
  d4
    $ (|* gain 1.35)
    $ seqP [
    (2, 8, (
      fast 4
      $ when (>=4) (every' 6 0 (const (
        s "~ [click click]" # n 2
        # gain "1 [1 0.8]" # speed "1 [1 0.4]"
        # lpf 300 # pan 0.5)))
      $ every' 3 0 (const (
        s "~ click" # n 2
        # lpf 300 # pan 0.5))
      $ every' 3 2 (const (
        s "click ~" # n 2
        # lpf 300 # pan 0.5))
      $ s "~"
      # gain 1.1
    )),
    (8, 100, (
      s "click:2*4"
      # lpf 300
      # pan 0.5
      # gain 1.1
    ))
    ]
  d5
    $ (|* gain 0.95)
    $ seqP[
    (0, 100, (
      every' 8 7 (const $
        while "t f" (# gain 0)
        $ fast 2
        $ s "brushing*16"
        # gain "[0 0 0 0.5] [0.5 0.7 [0.8 0.9 1.0 1.1]]"
        # speed "1"
        # pan "1 0.9 0.8 0.5 0.3 0.1 0"
      )
      $ s "~"
    ))
    ,
    (8, 100, (
      every' 2 0 (const $
        stack [
          s "~ [~!3 brushing] ~ [~!3 brushing]" # speed "1" # pan 0.2 # gain 0.8,
          every' 8 0 (stut' 2 (3/16) ((|* gain 0.8).(|* speed 0.9).(|> pan (0)))) $
          every' 8 0 (stut' 6 (3/8) ((|* gain 0.8).(|* speed 0.8).(|> pan (1)))) $
          s "brushing" # speed 2 # pan 0.8 # gain 0.75
        ]
      )
      $ s "~ [~!3 brushing] ~ [~!3 brushing]" # speed "1" # pan 0.2 # gain 0.8
    ))
    ]
  d6 -- bass
    $ (|* gain 0.75)
    $ seqP [
    (4, 24, (
      (|+ n 12)
      $ when (==0) (# gain 0)
      $ when (==1) (while "t f" (# gain 0))
      $ when (elem' [12..15]) (# gain 0)
      $ every' 4 0 (const $
        s (fit 0 ["SinOscSynthBend"] "0 ~ [~ 0] [[~ 0] ~]")
        # sustain "1.2 1.2 0.7 0.7"
        # n "<a1,a1> <a2,a1> <e2,e1> <b1,b1>"
      )
      $ every' 4 1 (const $
        s (fit 0 ["SinOscSynthBend"] "0 ~ [~ 0*2] ~")
        # sustain "1.2 0.7 0.7 1"
        # n "<e1,e1> ~ <a1,a1> ~"
      )
      $ every' 4 2 (const $
        s (fit 0 ["SinOscSynthBend"] "~ [~ 0] ~ 0")
        # sustain "0.7 0.7 0.7 0.7"
        # n "<a2,a1> <a2,a1> <e2,e1> <b1,b1>"
      )
      $ every' 4 3 (const $
        s (fit 0 ["SinOscSynthBend"] "~ [~ 0*2] ~ [~ 0*2]")
        # sustain "1 0.7 1 0.6"
        # n "<a2,a1> [~ [<e1,e1> <a1,a1>]] <a2,a1> [~ [<b1,b1> <cs2,cs2>]]"
      )
      $ s "~"
    )),
    (16, 28, (
      when (elem' [20..23]) (# gain 0)
      $ every' 4 0 (const $
        s (fit 0 ["SinOscSynthBend"] "0 ~ [~ 0] [[~ 0] ~]")
        # sustain "1.2 1.2 0.7 0.7"
        # n "<d3,d2>"
      )
      $ every' 4 1 (const $
        s (fit 0 ["SinOscSynthBend"] "0 ~ [~ 0*2] ~")
        # sustain "1.2 0.7 0.7 1"
        # n "<cs3,cs2> ~ [~ [<cs3,cs2> <e2,e1>]] ~"
      )
      $ every' 4 2 (const $
        s (fit 0 ["SinOscSynthBend"] "~ [~ 0] ~ 0")
        # sustain "0.7 0.7 0.7 0.7"
        # n "<b2,b1>"
      )
      $ every' 4 3 (const $
        s (fit 0 ["SinOscSynthBend"] "~ [~ 0*2] ~ [~ 0*2]")
        # sustain "1 0.7 1 0.6"
        # n "~ <e3,e2> ~ [~ [<b1,b1> <cs2,cs2>]]"
      )
      $ s "~"
    ))
    ]
